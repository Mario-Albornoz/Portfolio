/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: nimzu (https://sketchfab.com/nimzuk)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/foxs-islands-163b68e09fcc47618450150be7785907
Title: Fox's islands
*/

import { useEffect, useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame, useThree } from '@react-three/fiber'
import { a } from '@react-spring/three'

import islandScene from '../assets/3d/island.glb'

export const rotationSpeed = { current: 0 };

const Island= ({isRotating, setIsRotating, setCurrentStage, ...props}) => {
  const islandref = useRef();

  const { gl, viewport } = useThree();
  const { nodes, materials } = useGLTF(islandScene);

  const lastX = useRef(0);
  const rotationSpeed = useRef(0);
  /**this controls how fast the screen roates and for how long after the intial release */
  const dampingFactor = 0.97;

  /**functions for clicking and realsing the mouse */
  const handlePointerDown = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating (true);
    /** figure out if it is a touch in a phone or a click in a computer */
    const clientX = e.touches ? e.thouche[0] : e.clientX

    lastX.current = clientX 
  }

  const handlePointerUp = (e) => {
    e.stopPropagation();
    e.preventDefault();
    setIsRotating (false);
  }

  const handlePointerMove = (e) => {
    e.stopPropagation();
    e.preventDefault();

    if(isRotating) {
      const clientX = e.touches ? e.thouches[0] : e.clientX
      /**calculate change on the client positon */
      const delta = (clientX - lastX.current) / viewport.width;
  
      islandref.current.rotation.y += delta * 0.01 * Math.PI;
      /** Update reference for the last client exposition */
      lastX.current = clientX;
      rotationSpeed.current = delta * 0.01 * Math.PI;
    } 
  }


/**hook that applies to every single frame for the rotation */
  useFrame (() => {
    if(!isRotating){
      rotationSpeed.current *= dampingFactor;

      if (Math.abs(rotationSpeed.current) < 0.001) {
        rotationSpeed.current = 0;
      }

      islandref.current.rotation.y += rotationSpeed.current;
    } else {
      const rotation = islandref.current.rotation.y;

      const normalizedRotation =
        ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);
      
      console.log(normalizedRotation)
      // Set the current stage based on the island's orientation
      switch (true) { 
        case normalizedRotation >= 3.45 && normalizedRotation <= 3.6:
          setCurrentStage(1);
          break;
        case normalizedRotation >= 2.03 && normalizedRotation <= 2.32:
          setCurrentStage(2);
          break;
        case normalizedRotation >= 0.78 && normalizedRotation <= 1.065:
          setCurrentStage(3);
          break;
        case normalizedRotation >= 5.2 && normalizedRotation <= 5.38:
          setCurrentStage(4);
          break;
        default:
          setCurrentStage(null);
      }
    }
  })

  useEffect (() => {
    const canvas = gl.domElement;
    canvas.addEventListener('pointerdown', handlePointerDown);
    canvas.addEventListener('pointerup', handlePointerUp);
    canvas.addEventListener('pointermove', handlePointerMove);

    
    return () =>{
      canvas.removeEventListener('pointerdown', handlePointerDown);
      canvas.removeEventListener('pointerup', handlePointerUp);
      canvas.removeEventListener('pointermove', handlePointerMove);

    }
  }, [gl, handlePointerDown, handlePointerMove, handlePointerUp]);

  return (
    <a.group ref={islandref}{...props} >
      <group
        position={[-22.112, 515.3, 15.287]}
        rotation={[-Math.PI / 2, -0.001, 1.4]}
        scale={[100, 100, 1.78]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Faro_Material003_0.geometry}
          material={materials['Material.003']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Faro_Material003_0_1.geometry}
          material={materials['Material.003']}
        />
      </group>
      <group position={[-5.532, 265.794, 74.409]} rotation={[-1.384, -0.122, -0.255]} scale={2.88}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Pino_1001_Tronco_0.geometry}
          material={materials.Tronco}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Pino_1001_Verde_Claro_0.geometry}
          material={materials.Verde_Claro}
        />
      </group>
      <group position={[59.575, 309.577, -75.956]} rotation={[-1.646, -0.073, 1.845]} scale={4.841}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Arbol_1001_Verde_Claro_0.geometry}
          material={materials.Verde_Claro}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Arbol_1001_Material012_0.geometry}
          material={materials['Material.012']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Arbol_1001_Tronco_0.geometry}
          material={materials.Tronco}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Arbol_1001_Verde_Oscuro_0.geometry}
          material={materials.Verde_Oscuro}
        />
      </group>
      <group position={[68.025, 287.98, -18.233]} rotation={[-1.568, 0.122, 1.826]} scale={19.286}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Verde_muy_Oscuro_0.geometry}
          material={materials.Verde_muy_Oscuro}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Material013_0.geometry}
          material={materials['Material.013']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Material014_0.geometry}
          material={materials['Material.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Material015_0.geometry}
          material={materials['Material.015']}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Isla_Material002_0.geometry}
        material={materials['Material.002']}
        position={[0, 211.715, 0]}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Valla_2_Material007_0.geometry}
        material={materials['Material.007']}
        position={[28.286, 186.67, -135.19]}
        rotation={[1.89, -0.882, -1.694]}
        scale={[-8.753, 8.753, 6.248]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Valla_1_Material008_0.geometry}
        material={materials['Material.008']}
        position={[124.869, 114.683, -38.337]}
        rotation={[1.942, -0.442, 2.975]}
        scale={[37.769, 365.007, 37.769]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Valla_3_Material006_0.geometry}
        material={materials['Material.006']}
        position={[-61.72, 281.042, -20.448]}
        rotation={[1.577, 0.14, -0.523]}
        scale={[-8.753, 8.753, 6.248]}
      />

      {/**Decour clouds */}
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Nube_1_Nube_0.geometry}
        material={materials.Nube}
        position={[55.342, 563.313, 200.61]}
        rotation={[-1.577, -0.014, 1.517]}
        scale={[52.192, 18.463, 18.875]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Nube_2_Nube_0.geometry}
        material={materials.Nube}
        position={[-72.062, 580.429, -35.664]}
        rotation={[-Math.PI / 2, 0, 0.617]}
        scale={[43.757, 41.813, 21.398]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Nube_4_Nube_0.geometry}
        material={materials.Nube}
        position={[60.528, 545.858, 260.545]}
        rotation={[-Math.PI / 2, 0, 0.617]}
        scale={[24.922, 27.27, 14.847]}
      />

      {/**meshes for floating clouds for pop ups in order:[Home,about,projects,contact]
      <group position={[165, 300, -323]} rotation={[-1.568, 0.02, 1.35]} scale={10} name='home house'>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Verde_muy_Oscuro_0.geometry}
          material={materials.Verde_muy_Oscuro}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Material013_0.geometry}
          material={materials['Material.013']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Material014_0.geometry}
          material={materials['Material.014']}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Casa_1001_Material015_0.geometry}
          material={materials['Material.015']}
        />
      </group>*/}

      <group name='home clouds'>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_1_Nube_0.geometry}
          material={materials.Nube}
          position={[135, 292, -300]}
          rotation={[-1.577, -0.014, 2.517]}
          scale={[62.192, 28.463, 18.875]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_4_Nube_0.geometry}
          material={materials.Nube}
          position={[170, 275, -310]}
          rotation={[-Math.PI / 2, 0, -1]}
          scale={[64.922, 45.27, 24.847]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_4_Nube_0.geometry}
          material={materials.Nube}
          position={[110, 280, -335]}
          rotation={[-Math.PI / 2, 0, 2.617]}
          scale={[64.922, 27.27, 24.847]}
        />
      </group>
      
      <group name='about clouds'>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_3_Nube_0.geometry}
          material={materials.Nube}
          position={[-335, 295, -200]}
          rotation={[-Math.PI / 2, 0, 1]}
          scale={[48.236, 19.871, 17.296]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_2_Nube_0.geometry}
          material={materials.Nube}
          position={[-290, 295, -230]}
          rotation={[-Math.PI / 2, 0, 2.817]}
          scale={[43.757, 41.813, 21.398]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_3_Nube_0.geometry}
          material={materials.Nube}
          position={[-310, 300, -170]}
          rotation={[-Math.PI / 2, 0, 1]}
          scale={[51.236, 22.871, 20.296]}
        />
      </group>
      

      
      <group name='Project clouds'>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_2_Nube_0.geometry}
          material={materials.Nube}
          position={[-320, 290, 220]}
          rotation={[-Math.PI / 2, 0, 0.617]}
          scale={[43.757, 41.813, 21.398]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_2_Nube_0.geometry}
          material={materials.Nube}
          position={[-285, 295, 250]}
          rotation={[-Math.PI / 2, 0, 2.817]}
          scale={[43.757, 41.813, 21.398]}
        />
      </group>
      
      <group name='Contact Clouds'>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Nube_1_Nube_0.geometry}
          material={materials.Nube}
          position={[300, 290, 200]}
          rotation={[-4.577, -0.014, 2.517]}
          scale={[102.192, 48.463, 28.875]}
        />
      </group>


    </a.group>
  )
}

export default Island;